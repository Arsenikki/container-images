name: Create and push latest qBittorrent image

on:
  schedule:
     - cron: "0 0 * * 5"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  TEMPFILE: new-version.txt

jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest package version
        id: get-latest-version
        run: |
          ./.github/scripts/check-new-version-qbittorrent.sh ${{ env.TEMPFILE }}
        shell: bash
        env:
          supersecretpat: ${{ secrets.supersecretpat }}

      - name: Upload package version artifact
        uses: actions/upload-artifact@v2
        with:
          name: package-version
          path: ${{ env.TEMPFILE }}

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [get-latest-tag]

    steps:
      - name: Download package version artifact
        uses: actions/download-artifact@v2
        with:
          name: package-version

      - name: Package version to output and as an environment variable
        id: package-version-to-output
        run: |
          PACKAGE_VERSION=`cat ${{ env.TEMPFILE }}`
          echo $PACKAGE_VERSION
          echo ::set-output name=PACKAGE_VERSION::$(echo ${PACKAGE_VERSION})

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: ./qBittorrent-with-VueTorrent
          load: true
          build-args: |
            BASE_IMAGE=ghcr.io/k8s-at-home/qbittorrent:${{ steps.package-version-to-output.outputs.PACKAGE_VERSION }}
          tags: "ghcr.io/arsenikki/qbittorrent:${{ steps.package-version-to-output.outputs.PACKAGE_VERSION }}"

      - name: Run Trivy config scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: "./qBittorrent-with-VueTorrent"
          hide-progress: false
          format: "sarif"
          output: "trivy-config-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/arsenikki/qbittorrent:${{ steps.package-version-to-output.outputs.PACKAGE_VERSION }}"
          format: "sarif"
          output: "trivy-image-results.sarif"
          severity: "CRITICAL,HIGH"
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "./"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./qBittorrent-with-VueTorrent
          push: true
          build-args: |
            BASE_IMAGE=ghcr.io/k8s-at-home/qbittorrent:${{ steps.package-version-to-output.outputs.PACKAGE_VERSION }}
          tags: "ghcr.io/arsenikki/qbittorrent:${{ steps.package-version-to-output.outputs.PACKAGE_VERSION }}"
